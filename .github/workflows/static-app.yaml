name: SPA

env:
  AZURE_WEBAPP_PACKAGE_PATH: "./packages" # set this to the path to your web app project, defaults to the repository root
on:
  push:
    branches: [main]
    paths:
      - "Application/StaticApp/**"
      - ".github/workflows/static-app.yaml"
  pull_request:
    paths:
      - "Application/StaticApp/**"
      - ".github/workflows/static-app.yaml"
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-test-app:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3

      - name: npm install, build, and test
        working-directory: ./Application/StaticApp/sample-react-app
        run: |
          # Build and test the project, then
          # deploy to Azure Web App.
          npm install
          npm run test --if-present
          npm run build

      - uses: actions/upload-artifact@v3
        with:
          name: app
          path: "./Application/StaticApp/sample-react-app/build/**"

  deploy-to-test:
    needs: build-and-test-app
    runs-on: ubuntu-latest
    environment: test
    concurrency: spa-test
    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: "Run Azure webapp deploy action using publish profile credentials"
        uses: actions/download-artifact@v3
        with:
          name: app
          path: app

      - name: "Fetch Spa Metadata"
        id: "fetchSpaMetadata"
        run: |
          echo "spaName=$(az deployment sub show -n "${{ secrets.RESOURCE_PREFIX }}-test-apps" --query "properties.outputs.spaName.value" -o tsv)" >> $GITHUB_OUTPUT

      - uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ steps.fetchSpaMetadata.outputs.spaName }}
          package: "./app/"
      - name: logout
        run: |
          az logout

  deploy-to-production-green:
    needs:
      - deploy-to-test
    runs-on: ubuntu-latest
    environment: prod
    concurrency: spa-prod
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Run Azure webapp deploy action using publish profile credentials"
        uses: actions/download-artifact@v3
        with:
          name: app
          path: app

      - name: "Fetch Spa Metadata"
        id: "fetchSpaMetadata"
        run: |
          echo "spaName=$(az deployment sub show -n "${{ secrets.RESOURCE_PREFIX }}-prod-apps" --query "properties.outputs.spaName.value" -o tsv)" >> $GITHUB_OUTPUT
          echo "spaResourceGroupName=$(az deployment sub show -n "${{ secrets.RESOURCE_PREFIX }}-prod-apps" --query "properties.outputs.spaResourceGroupName.value" -o tsv)" >> $GITHUB_OUTPUT

      - uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ steps.fetchSpaMetadata.outputs.appName }}
          package: "./app/"
          slot-name: "green"

      - name: logout
        run: |
          az logout

  deploy-to-production:
    needs:
      - deploy-to-production-green
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Fetch Spa Metadata"
        id: "fetchSpaMetadata"
        run: |
          echo "spaName=$(az deployment sub show -n "${{ secrets.RESOURCE_PREFIX }}-prod-apps" --query "properties.outputs.spaName.value" -o tsv)" >> $GITHUB_OUTPUT
          echo "spaResourceGroupName=$(az deployment sub show -n "${{ secrets.RESOURCE_PREFIX }}-prod-apps" --query "properties.outputs.spaResourceGroupName.value" -o tsv)" >> $GITHUB_OUTPUT

      - run: az webapp deployment slot swap --slot green --action swap --name '${{ steps.fetchSpaMetadata.outputs.spaName }}' --resource-group '${{ steps.fetchSpaMetadata.outputs.spaResourceGroupName }}'
